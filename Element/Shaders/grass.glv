#version 400 core

layout (location = 0) in vec3 position;
layout (location = 1) in vec2 texCoords;

out vec2 TexCoords;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

uniform vec3 windDirection;
uniform float windIntensity;
uniform float time;

float damper = 10.0f;

void main() {
	vec3 translatedWSPos = (model * vec4(position, 1.0f)).xyz;

	// Vertex animation
	if(texCoords.y > 0.9f) {
		vec4 worldSpacePos = model * vec4(position, 1.0f);
		float variance = sin(time) / damper;
		if(windIntensity == 0.0f) variance = 0.0f;

		translatedWSPos = worldSpacePos.xyz + (normalize(windDirection) * windIntensity * (2.0f/damper)) + variance;
	}

	// Output
    gl_Position = projection * view * vec4(translatedWSPos, 1.0f);
    TexCoords = texCoords;
}