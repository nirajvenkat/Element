#version 400 core

layout (lines) in;
layout (triangle_strip, max_vertices = 4) out;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

uniform vec3 windDirection;
uniform float windIntensity;
uniform float time;

void build_blade(vec4 base, vec4 top) {
	gl_Position = projection * view * model * (base);									// 1: base
    EmitVertex();
    gl_Position = projection * view * model * (base + vec4(0.01f, 0.0f, 0.0f, 0.0f));   // 2: bottom-right
    EmitVertex();   
    gl_Position = projection * view * model * (top);									// 3: top
    EmitVertex();
	gl_Position = projection * view * model * (base + vec4(-0.01f, 0.0f, 0.0f, 0.0f));  // 4: bottom-left
    EmitVertex();   
    EndPrimitive();
}

void main() {
	vec4 modelSpaceBasePos = inverse(projection * view * model) * gl_in[0].gl_Position;
	vec4 modelSpaceTopPos = inverse(projection * view * model) * gl_in[1].gl_Position;

    build_blade(modelSpaceBasePos, modelSpaceTopPos);
}  